name: Testing

on:
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: django-vue-template
          POSTGRES_PASSWORD: django-vue-template
          POSTGRES_DB: django-vue-template
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cp .env.example .env
    - name: Run Django Unit Tests
      run: |
        coverage run --omit='*/venv/*' manage.py test
        coverage html
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov
    - name: Setup Node
      uses: actions/setup-node@master
    - name: Install dependencies
      run: |
        npm install
    - name: Run Vue Unit Tests
      run: |
        npm run build
        npm run test:unit
    - name: Run Test Server
      run: |
        python manage.py testserver tests/e2e/fixtures/*.json &
    - name: Run E2E Cypress Test
      uses: cypress-io/github-action@v2
    - name: Archive Cypress results
      uses: actions/upload-artifact@v2
      with:
        name: cypress-result
        path: |
          tests/e2e/screenshots
          tests/e2e/videos
    - name: Linting de Python
      run: |
        flake8
    - name: Linting de Vue
      run: |
        npm run lint
