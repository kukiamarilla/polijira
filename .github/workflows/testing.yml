name: Testing

on:
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: polijira
          POSTGRES_PASSWORD: polijira
          POSTGRES_DB: polijira
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    env:
      FIREBASE_APP_ID: 1:594739410205:web:7e5ee43538410b60f3ddf4
      FIREBASE_PROJECT_ID: polijira-cc147
      FIREBASE_PRIVATE_KEY: ${{secrets.FIREBASE_PRIVATE_KEY}}
      FIREBASE_CLIENT_EMAIL: firebase-adminsdk-nzj8y@polijira-cc147.iam.gserviceaccount.com
      FIREBASE_TOKEN_URI: https://oauth2.googleapis.com/token
      VUE_APP_FIREBASE_API_KEY: ${{secrets.VUE_APP_FIREBASE_API_KEY}}
      VUE_APP_FIREBASE_AUTH_DOMAIN: polijira-cc147.firebaseapp.com
      VUE_APP_FIREBASE_PROJECT_ID: polijira-cc147
      VUE_APP_FIREBASE_DATABASE_URL: https://polijira-cc147-default-rtdb.firebaseio.com/
      VUE_APP_FIREBASE_STORAGE_BUCKET: polijira-cc147.appspot.com
      VUE_APP_FIREBASE_MESSAGE_SENDER_ID: 594739410205
      VUE_APP_FIREBASE_APP_ID: 1:594739410205:web:7e5ee43538410b60f3ddf4
      TESTING_USER_EMAIL: test@polijira.com
      TESTING_USER_PASSWORD: ${{secrets.TESTING_USER_PASSWORD}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies Backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cp .env.example .env
    - name: Install Dependencies Frontend
      run: |
        npm install
    - name: Building Frontend
      run: |
        npm run build
    - name: Run Django Unit Tests
      run: |
        coverage run --omit='*/venv/*' manage.py test
        coverage html
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov
    - name: Setup Node
      uses: actions/setup-node@master
    - name: Run Vue Unit Tests
      run: |
        npm run test:unit
    - name: Run Test Server
      run: |
        python manage.py testserver tests/e2e/fixtures/*.json &
    - name: Run E2E Cypress Test
      uses: cypress-io/github-action@v2
    - name: Archive Cypress results
      uses: actions/upload-artifact@v2
      with:
        name: cypress-result
        path: |
          tests/e2e/screenshots
          tests/e2e/videos
    - name: Linting de Python
      run: |
        flake8
    - name: Linting de Vue
      run: |
        npm run lint
